<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
        http://www.liquibase.org/xml/ns/dbchangelog
        https://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

    <!-- User-Tabelle -->
    <changeSet id="1-create-user-table" author="karl">
        <createTable tableName="users">
            <column name="id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="email" type="VARCHAR(255)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="password_hash" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="TIMESTAMP WITH TIME ZONE">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="2-add-salt-column" author="dimitri">
        <addColumn tableName="users">
            <column name="salt" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="3-add-role-to-user" author="karl">
        <addColumn tableName="users">
            <column name="role" type="VARCHAR(50)" defaultValue="User">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="4-add-double-opt-in-fields" author="karl">
        <addColumn tableName="users">
            <column name="active" type="BOOLEAN" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="activation_token" type="VARCHAR(255)">
                <constraints unique="true"/>
            </column>
            <column name="activation_token_created" type="TIMESTAMP WITH TIME ZONE"/>
        </addColumn>
    </changeSet>

    <changeSet id="5-add-pending-email" author="karl">
        <addColumn tableName="users">
            <column name="pending_email" type="VARCHAR(255)"/>
            <column name="email_activation_token" type="VARCHAR(255)"/>
            <column name="email_activation_token_created" type="TIMESTAMP WITH TIME ZONE"/>
        </addColumn>
    </changeSet>

    <changeSet id="6-add-first-last-name" author="karl">
        <!-- Nur ausführen, wenn Spalten noch nicht existieren -->
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="users" columnName="first_name"/>
            </not>
        </preConditions>

        <!-- Spalten anlegen und für bestehende Datensätze mit leerem String initialisieren -->
        <addColumn tableName="users">
            <column name="first_name" type="VARCHAR(100)" defaultValue=""/>
            <column name="last_name"  type="VARCHAR(100)" defaultValue=""/>
        </addColumn>

        <!-- NOT NULL Constraint nach dem Anlegen -->
        <addNotNullConstraint tableName="users" columnName="first_name"/>
        <addNotNullConstraint tableName="users" columnName="last_name"/>
    </changeSet>

    <changeSet id="7-create-sustainability-filter" author="karl">
        <createTable tableName="sustainability_filter">
            <column name="id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="filter_key" type="VARCHAR(50)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="label" type="VARCHAR(100)">
                <constraints nullable="false"/>
            </column>
            <column name="icon" type="VARCHAR(100)">
                <constraints nullable="false"/>
            </column>
            <column name="description" type="VARCHAR(500)">
                <constraints nullable="false"/>
            </column>
            <column name="examples" type="VARCHAR(1000)">
                <constraints nullable="false"/>
            </column>
            <column name="importance" type="VARCHAR(20)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <!-- in db/changelog/db.changelog-master.xml -->
    <changeSet id="8-create-user-filter-prefs" author="karl">
        <createTable tableName="user_sustainability_pref">
            <!-- Surrogate PK -->
            <column name="id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <!-- FK auf User -->
            <column name="user_id" type="UUID">
                <constraints nullable="false" foreignKeyName="fk_pref_user"
                             references="users(id)"/>
            </column>
            <!-- FK auf Filter -->
            <column name="filter_id" type="UUID">
                <constraints nullable="false" foreignKeyName="fk_pref_filter"
                             references="sustainability_filter(id)"/>
            </column>
            <!-- Importance aus deinem Enum -->
            <column name="importance" type="VARCHAR(20)">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <!-- Sicherstellen, dass pro (user,filter) nur ein Eintrag existiert -->
        <addUniqueConstraint tableName="user_sustainability_pref"
                             columnNames="user_id,filter_id"
                             constraintName="uc_user_filter"/>
    </changeSet>

    <changeSet id="9-bootstrap-initial-admin" author="you" context="bootstrap">
        <!-- Nur anlegen, wenn die E-Mail noch nicht existiert -->
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM users WHERE email = 'admin@example.com'
            </sqlCheck>
        </preConditions>

        <insert tableName="users">
            <!-- feste UUID (kannst du ändern, aber stabil lassen) -->
            <column name="id" value="11111111-2222-3333-4444-555555555555"/>

            <column name="first_name" value="System"/>
            <column name="last_name"  value="Admin"/>

            <column name="email" value="admin@elysion.com"/>

            <!-- Aus dem HashTool -->
            <column name="password_hash" value="$2a$12$M8Q35jYDH0VxrQEAHR4OOOyNKG8G5SZSmMzhURXSgvYv8FY4oDvya"/>
            <column name="salt"          value="bEg+eoewDQ9jlY7Jom9mMQ=="/>

            <column name="role" value="Admin"/>
            <column name="active" valueBoolean="true"/>

            <column name="created_at" valueComputed="CURRENT_TIMESTAMP"/>

            <!-- optionale Felder leer lassen -->
            <!-- pending_email, activation_token, activation_token_created -->
        </insert>

        <!-- Optional: Rollback (löscht genau diesen Admin wieder) -->
        <rollback>
            <delete tableName="users">
                <where>id = '11111111-2222-3333-4444-555555555555'</where>
            </delete>
        </rollback>
    </changeSet>

    <changeSet id="18-add-activation-token-confirm-used" author="elysion">
        <addColumn tableName="users">
            <column name="activation_token_confirmed_at" type="TIMESTAMP WITH TIME ZONE"/>
            <column name="activation_token_used_at" type="TIMESTAMP WITH TIME ZONE"/>
        </addColumn>
    </changeSet>

    <changeSet id="19-create-user-token" author="karl">
        <createTable tableName="user_token">
            <column name="id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="user_id" type="UUID">
                <constraints nullable="false"/>
            </column>
            <column name="token" type="VARCHAR(255)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="type" type="VARCHAR(20)">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="TIMESTAMP WITH TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="confirmed_at" type="TIMESTAMP WITH TIME ZONE"/>
            <column name="used_at" type="TIMESTAMP WITH TIME ZONE"/>
        </createTable>

        <addForeignKeyConstraint baseTableName="user_token"
                                 baseColumnNames="user_id"
                                 referencedTableName="users"
                                 referencedColumnNames="id"
                                 onDelete="CASCADE"
                                 constraintName="fk_user_token_user"/>

        <!-- Ein „offenes“ Token je (user_id,type) -->
        <sql>
            CREATE UNIQUE INDEX IF NOT EXISTS ux_user_token_open_per_type
                ON user_token (user_id, type)
                WHERE used_at IS NULL;
        </sql>

        <createIndex indexName="ix_user_token_user" tableName="user_token">
            <column name="user_id"/>
        </createIndex>
        <createIndex indexName="ix_user_token_type" tableName="user_token">
            <column name="type"/>
        </createIndex>
    </changeSet>

    <changeSet id="20-migrate-existing-tokens" author="karl">
        <!-- Activation -->
        <sql>
            INSERT INTO user_token (id, user_id, token, type, created_at, confirmed_at, used_at)
            SELECT gen_random_uuid(), u.id, u.activation_token, 'ACTIVATION',
                   COALESCE(u.activation_token_created, NOW()),
                   u.activation_token_confirmed_at,
                   u.activation_token_used_at
            FROM users u
            WHERE u.activation_token IS NOT NULL;
        </sql>

        <!-- Email-Change (falls genutzt) -->
        <sql>
            INSERT INTO user_token (id, user_id, token, type, created_at)
            SELECT gen_random_uuid(), u.id, u.email_activation_token, 'EMAIL_CHANGE',
                   COALESCE(u.email_activation_token_created, NOW())
            FROM users u
            WHERE u.email_activation_token IS NOT NULL;
        </sql>
    </changeSet>

    <changeSet id="21-drop-user-token-columns" author="karl">
        <preConditions onFail="MARK_RAN">
            <or>
                <columnExists tableName="users" columnName="activation_token"/>
                <columnExists tableName="users" columnName="email_activation_token"/>
            </or>
        </preConditions>

        <dropColumn tableName="users" columnName="activation_token"/>
        <dropColumn tableName="users" columnName="activation_token_created"/>
        <dropColumn tableName="users" columnName="activation_token_confirmed_at"/>
        <dropColumn tableName="users" columnName="activation_token_used_at"/>

        <dropColumn tableName="users" columnName="email_activation_token"/>
        <dropColumn tableName="users" columnName="email_activation_token_created"/>
    </changeSet>

</databaseChangeLog>